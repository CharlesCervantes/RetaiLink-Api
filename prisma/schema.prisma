generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model promotores {
  id_promotor            String @id @default(cuid()) 
  vc_contrasena          String
  vc_telefono            String
  vc_correo              String 
  i_registro             Int 
  i_actualizacion        Int

  e_rol                    Roles @default(promotor)

  perfil perfiles_promotor?

  pedido pedido[]
}


model usuarios {
  id_usuario             String @id @default(cuid()) 
  vc_nombre              String
  vc_apellido_paterno    String
  vc_apellido_materno    String
  vc_correo              String? @unique
  vc_contrasena          String
  vc_telefono            String? @unique 
  dt_registro            DateTime @default(now()) 
  dt_actualizacion       DateTime @updatedAt
  i_status               Boolean @default(true)

  e_rol                    Roles @default(administrador)

  id_cliente            String?
  cliente clientes? @relation(fields: [id_cliente], references: [id_cliente])

  pedido pedido[]
}

model perfiles_promotor {
  id_perfil_promotor     String @id @default(cuid())
  id_promotor            String @unique
  vc_nombre              String
  vc_apellido_paterno    String
  vc_apellido_materno    String
  vc_telefono            String
  vc_correo              String
  dt_registro            DateTime @default(now())
  dt_actualizacion       DateTime @updatedAt
  i_status               Boolean @default(true) 

  promotor promotores? @relation(fields: [id_promotor], references: [id_promotor])
}



// Esto es equivalente a la organizacion
model clientes {
  id_cliente             String @id @default(cuid())
  vc_nombre               String
  dt_registro             DateTime @default(now())
  dt_actualizacion        DateTime @updatedAt
  b_activo                Boolean @default(true)


  usuarios usuarios[]
  marcas marcas[]
}

model marcas {
  id_marca               String @id @default(cuid())
  vc_nombre              String
  id_cliente             String
  dt_registro            DateTime @default(now())
  dt_actualizacion       DateTime @updatedAt
  b_activo               Boolean @default(true)

  cliente clientes? @relation(fields: [id_cliente], references: [id_cliente])
}

model establecimientos {
  id_establecimiento     String @id @default(cuid())
  vc_nombre              String
  vc_numero_serie        String?
  id_direccion           String @unique
  id_localizacion        String @unique
  vc_telefono            String
  i_registro             Int
  i_actualizacion        String


  direccion direcciones? @relation(fields: [id_direccion], references: [id_direccion])
  localizacion localizaciones? @relation(fields: [id_localizacion], references: [id_localizacion])

  pedido pedido[]
}

model paises {
  id_pais                String @id @default(cuid())
  vc_nombre              String
  vc_nombre_oficial      String?
  vc_codigo_iso          String  // Ejemplo: "MX"
  vc_indicativo          String? // Ejemplo: +52
  dt_registro            DateTime @default(now())
  dt_actualizacion       DateTime @updatedAt
  i_codigo_postal        Int?

  estado estados[]
  direccion direcciones[]
}

model estados {
  id_estado              String @id @default(cuid())
  id_pais                String
  vc_nombre              String
  vc_clave               String?
  dt_registro            DateTime @default(now())
  dt_actualizacion       DateTime @updatedAt
  i_codigo_postal        Int?
  i_status              Boolean @default(true)

  pais paises? @relation(fields: [id_pais], references: [id_pais])
  municipio municipios[]
  direccion direcciones[]
}

model municipios {
  id_municipio           String @id @default(cuid())
  id_estado              String
  vc_nombre              String
  vc_clave               String?
  i_registro             Int
  i_actualizacion        Int
  i_codigo_postal        Int?

  estado estados? @relation(fields: [id_estado], references: [id_estado])

  colonia colonias[]

  direccion direcciones[]
}

model colonias {
  id_colonia             String @id @default(cuid())
  id_municipio           String
  vc_nombre              String
  i_codigo_postal        Int?
  i_registro             Int
  i_actualizacion        Int
  

  municipio municipios? @relation(fields: [id_municipio], references: [id_municipio])

  direccion direcciones[]
}

model direcciones {
  id_direccion           String @id @default(cuid())
  id_pais                String
  id_estado              String
  id_municipio           String
  id_colonia             String
  vc_calle               String
  vc_numero_exterior     String?
  vc_numero_interior     String?
  vc_codigo_postal       String
  i_registro             Int
  i_actualizacion        Int

  establecimiento establecimientos?

  pais paises? @relation(fields: [id_pais], references: [id_pais])
  estado estados? @relation(fields: [id_estado], references: [id_estado])
  municipio municipios? @relation(fields: [id_municipio], references: [id_municipio])
  colonia colonias? @relation(fields: [id_colonia], references: [id_colonia])
}

model localizaciones {
  id_localizacion        String @id @default(cuid())
  f_latitud              Decimal
  f_longitud             Decimal
  i_registro             Int
  i_actualizacion        Int

  establecimineto establecimientos?
}

model pedido {
  id_pedido              String @id @default(cuid())
  id_establecimiento     String 
  id_promotor            String
  id_usuario             String
  descripcion            String
  i_entrega              Int
  i_total                Int
  i_registro             Int
  i_actualizacion        Int
  estado                 estados_podido @default(pendiente)

  establecimiento establecimientos? @relation(fields: [id_establecimiento], references: [id_establecimiento])
  promotor promotores? @relation(fields: [id_promotor], references: [id_promotor])
  usuario usuarios? @relation(fields: [id_usuario], references: [id_usuario])
}

model log {
  id_log                 String @id @default(cuid())
  nombre_tabla           String
  id_registro            String
  campos                 String
  valores                String
  vc_accion              String
  i_registro             Int
}	


enum Roles {
  usuario
  promotor
  administrador
  super_administrador
}

enum estados_podido {
  pendiente  
  aceptado  
  validado 
  completado
}
